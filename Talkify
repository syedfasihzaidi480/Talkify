{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"dockerImageVersionId":30919,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Step 1: Install required libraries (with upgraded pyngrok)\n!pip install -q streamlit openai-whisper gtts --upgrade pyngrok\n!sudo apt update && sudo apt install -y ffmpeg\n\n# Step 2: Create app.py using Python file operations\napp_content = \"\"\"\nimport streamlit as st\nimport whisper\nfrom gtts import gTTS\nimport os\n\n@st.cache_resource\ndef load_whisper_model():\n    return whisper.load_model(\"base\")\n\ndef main():\n    st.title(\"🎙️ Audio ↔ Text Converter\")\n    st.write(\"Using Whisper AI and gTTS\")\n\n    # Audio to Text Section\n    st.header(\"Audio to Text Conversion\")\n    audio_file = st.file_uploader(\"Upload audio file\", type=[\"wav\", \"mp3\", \"ogg\"])\n    \n    if audio_file is not None:\n        with open(\"temp_audio\", \"wb\") as f:\n            f.write(audio_file.getbuffer())\n        \n        model = load_whisper_model()\n        result = model.transcribe(\"temp_audio\")\n        text = result[\"text\"]\n        \n        st.subheader(\"Transcription Result\")\n        st.text_area(\"Text\", text, height=150)\n        \n        # Text to Audio Section\n        st.header(\"Text to Audio Conversion\")\n        tts_text = st.text_area(\"Text to convert to speech\", text, height=100)\n        \n        if st.button(\"Generate Speech\"):\n            tts = gTTS(text=tts_text, lang='en')\n            tts.save(\"output.mp3\")\n            st.audio(\"output.mp3\")\n            st.success(\"Audio generated successfully!\")\n            \n            with open(\"output.mp3\", \"rb\") as f:\n                audio_bytes = f.read()\n            st.download_button(\n                label=\"Download Audio\",\n                data=audio_bytes,\n                file_name=\"generated_audio.mp3\",\n                mime=\"audio/mp3\"\n            )\n        \n        os.remove(\"temp_audio\")\n\nif __name__ == \"__main__\":\n    main()\n\"\"\"\n\n# Write the content to app.py\nwith open('app.py', 'w') as f:\n    f.write(app_content)\n\n# Step 3: Run the Streamlit app with ngrok\n# Add your ngrok authtoken\n!ngrok authtoken 2uGvmndD6LUlbeVBSyk4Hdgm4WS_6AeLWxH94JFYetSX2s2is\n\n# Start Streamlit in background\nget_ipython().system_raw('streamlit run app.py --server.port 8501 &')\n\n# Create HTTP tunnel with correct syntax\nfrom pyngrok import ngrok\npublic_url = ngrok.connect(addr=8501, proto=\"http\", bind_tls=True)\nprint(\"Your app is available at:\", public_url)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-03-16T11:36:00.909394Z","iopub.execute_input":"2025-03-16T11:36:00.909793Z","iopub.status.idle":"2025-03-16T11:36:10.038601Z","shell.execute_reply.started":"2025-03-16T11:36:00.909762Z","shell.execute_reply":"2025-03-16T11:36:10.037618Z"}},"outputs":[{"name":"stdout","text":"Hit:1 https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64  InRelease\nHit:2 https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/ InRelease     \u001b[0m\nHit:3 https://r2u.stat.illinois.edu/ubuntu jammy InRelease                     \u001b[0m\u001b[33m\nHit:4 http://security.ubuntu.com/ubuntu jammy-security InRelease               \u001b[0m\nHit:5 http://archive.ubuntu.com/ubuntu jammy InRelease                         \u001b[0m\nHit:6 http://archive.ubuntu.com/ubuntu jammy-updates InRelease                 \u001b[0m\nHit:7 http://archive.ubuntu.com/ubuntu jammy-backports InRelease               \nHit:8 https://ppa.launchpadcontent.net/deadsnakes/ppa/ubuntu jammy InRelease\nHit:9 https://ppa.launchpadcontent.net/graphics-drivers/ppa/ubuntu jammy InRelease\nHit:10 https://ppa.launchpadcontent.net/ubuntugis/ppa/ubuntu jammy InRelease\nReading package lists... Done\u001b[33m\u001b[33m\nBuilding dependency tree... Done\nReading state information... Done\n153 packages can be upgraded. Run 'apt list --upgradable' to see them.\n\u001b[1;33mW: \u001b[0mSkipping acquire of configured file 'main/source/Sources' as repository 'https://r2u.stat.illinois.edu/ubuntu jammy InRelease' does not seem to provide it (sources.list entry misspelt?)\u001b[0m\nReading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nffmpeg is already the newest version (7:4.4.2-0ubuntu0.22.04.1).\n0 upgraded, 0 newly installed, 0 to remove and 153 not upgraded.\nAuthtoken saved to configuration file: /root/.config/ngrok/ngrok.yml\nYour app is available at: NgrokTunnel: \"https://83cf-34-70-81-0.ngrok-free.app\" -> \"http://localhost:8501\"\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}